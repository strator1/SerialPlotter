package de.unituebingen.medizin.eye.serialplotter;

import java.awt.Component;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.plaf.basic.BasicComboBoxRenderer;
import jssc.SerialPort;
import jssc.SerialPortList;

/**
 *
 * @author strasser
 */
public class SerialPortConfigurationPanel extends javax.swing.JPanel {
	private static final String PROPERTY_PORT			= "port";
	private static final String PROPERTY_BAUDRATE		= "baudrate";
	private static final String PROPERTY_DATABITS		= "databits";
	private static final String PROPERTY_STOPBITS		= "stopbits";
	private static final String PROPERTY_PARITY			= "parity";
	private static final String PROPERTY_FLOW_CONTROL	= "flowControl";

	private int _baudrate		= SerialPort.BAUDRATE_115200;
	private int _databits		= SerialPort.DATABITS_8;
	private int _stopbits		= SerialPort.STOPBITS_1;
	private int _parity			= SerialPort.PARITY_NONE;
	private int _flowControl	= SerialPort.FLOWCONTROL_NONE;

	private String _port;

	/**
	 * Creates new form SerialPortConfigurationPanel
	 */
	public SerialPortConfigurationPanel() {
		initComponents();
	}

	public void setPort(final String port) {
		final String old = _port;
		_port = port;
		firePropertyChange(PROPERTY_PORT, old, _port);
	}

	public String getPort() {
		return _port;
	}

	public void setBaudrate(final int baudrate) {
		final int old = _baudrate;
		_baudrate = baudrate;
		firePropertyChange(PROPERTY_BAUDRATE, old, _baudrate);
	}

	public int getBaudrate() {
		return _baudrate;
	}

	public void setDatabits(final int databits) {
		final int old = _databits;
		_databits = databits;
		firePropertyChange(PROPERTY_DATABITS, old, _databits);
	}

	public int getDatabits() {
		return _databits;
	}

	public void setStopbits(final int stopbits) {
		final int old = _stopbits;
		_stopbits = stopbits;
		firePropertyChange(PROPERTY_STOPBITS, old, _stopbits);
	}

	public int getStopbits() {
		return _stopbits;
	}

	public void setParity(final int parity) {
		final int old = _parity;
		_parity = parity;
		firePropertyChange(PROPERTY_PARITY, old, _parity);
	}

	public int getParity() {
		return _parity;
	}

	public void setFlowControl(final int flowControl) {
		final int old = _flowControl;
		_flowControl = flowControl;
		firePropertyChange(PROPERTY_FLOW_CONTROL, old, _flowControl);
	}

	public int getFlowControl() {
		return _flowControl;
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        final javax.swing.JPanel serialPortSelectionPanel = new javax.swing.JPanel();
        final javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        final javax.swing.JComboBox serialPortComboBox = new javax.swing.JComboBox();
        final javax.swing.JPanel serialPortConfigurationPanel = new javax.swing.JPanel();
        final javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        final javax.swing.JComboBox baudRateComboBox = new javax.swing.JComboBox();
        final javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        final javax.swing.JComboBox dataBitsComboBox = new javax.swing.JComboBox();
        final javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        final javax.swing.JComboBox stopBitsComboBox = new javax.swing.JComboBox();
        final javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        final javax.swing.JComboBox parityComboBox = new javax.swing.JComboBox();
        final javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        final javax.swing.JComboBox flowControlComboBox = new javax.swing.JComboBox();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("strings"); // NOI18N
        serialPortSelectionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("dialog.serialport.serialport.title"))); // NOI18N

        jLabel1.setText(bundle.getString("dialog.serialport.serialport.text")); // NOI18N

        final DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(SerialPortList.getPortNames());
        model.insertElementAt(null, 0);
        serialPortComboBox.setModel(model);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${port}"), serialPortComboBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"), "portBinding");
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout serialPortSelectionPanelLayout = new javax.swing.GroupLayout(serialPortSelectionPanel);
        serialPortSelectionPanel.setLayout(serialPortSelectionPanelLayout);
        serialPortSelectionPanelLayout.setHorizontalGroup(
            serialPortSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serialPortSelectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(serialPortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        serialPortSelectionPanelLayout.setVerticalGroup(
            serialPortSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serialPortSelectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serialPortSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(serialPortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        serialPortConfigurationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("dialog.serialport.configure.title"))); // NOI18N

        jLabel2.setText(bundle.getString("dialog.serialport.baudrate.text")); // NOI18N

        baudRateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] {
            SerialPort.BAUDRATE_256000,
            SerialPort.BAUDRATE_128000,
            SerialPort.BAUDRATE_115200,
            SerialPort.BAUDRATE_57600,
            SerialPort.BAUDRATE_38400,
            SerialPort.BAUDRATE_19200,
            SerialPort.BAUDRATE_14400,
            SerialPort.BAUDRATE_9600,
            SerialPort.BAUDRATE_4800,
            SerialPort.BAUDRATE_1200,
            SerialPort.BAUDRATE_600,
            SerialPort.BAUDRATE_300,
            SerialPort.BAUDRATE_110
        }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${baudrate}"), baudRateComboBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"), "baudrateBinding");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, serialPortComboBox, org.jdesktop.beansbinding.ELProperty.create("${selectedItem != null}"), baudRateComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel3.setText(bundle.getString("dialog.serialport.databits.text")); // NOI18N

        dataBitsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] {
            SerialPort.DATABITS_8,
            SerialPort.DATABITS_7,
            SerialPort.DATABITS_6,
            SerialPort.DATABITS_5
        }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${databits}"), dataBitsComboBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"), "databitsBinding");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, serialPortComboBox, org.jdesktop.beansbinding.ELProperty.create("${selectedItem != null}"), dataBitsComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel4.setText(bundle.getString("dialog.serialport.stopbits.text")); // NOI18N

        stopBitsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] {
            SerialPort.STOPBITS_1,
            SerialPort.STOPBITS_1_5,
            SerialPort.STOPBITS_2
        }));
        stopBitsComboBox.setRenderer(new BasicComboBoxRenderer() {
            @Override
            public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) {
                final JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                final int v = (int) value;

                if (v == SerialPort.STOPBITS_1) {
                    label.setText("1");
                } else if (v == SerialPort.STOPBITS_1_5) {
                    label.setText("1.5");
                } else if (v == SerialPort.STOPBITS_2) {
                    label.setText("2");
                }

                return label;
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${stopbits}"), stopBitsComboBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"), "stopbitsBinding");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, serialPortComboBox, org.jdesktop.beansbinding.ELProperty.create("${selectedItem != null}"), stopBitsComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel5.setText(bundle.getString("dialog.serialport.parity.text")); // NOI18N

        parityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] {
            SerialPort.PARITY_NONE,
            SerialPort.PARITY_ODD,
            SerialPort.PARITY_EVEN,
            SerialPort.PARITY_MARK,
            SerialPort.PARITY_SPACE
        }));
        parityComboBox.setRenderer(new BasicComboBoxRenderer() {
            @Override
            public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) {
                final JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                final int v = (int) value;

                switch (v) {
                    case SerialPort.PARITY_NONE:
                    label.setText("None");
                    break;
                    case SerialPort.PARITY_ODD:
                    label.setText("Odd");
                    break;
                    case SerialPort.PARITY_EVEN:
                    label.setText("Even");
                    break;
                    case SerialPort.PARITY_MARK:
                    label.setText("Mark");
                    break;
                    case SerialPort.PARITY_SPACE:
                    label.setText("Space");
                    break;
                }

                return label;
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${parity}"), parityComboBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"), "parityBinding");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, serialPortComboBox, org.jdesktop.beansbinding.ELProperty.create("${selectedItem != null}"), parityComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel6.setText(bundle.getString("dialog.serialport.flowcontrol.text")); // NOI18N

        flowControlComboBox.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] {
            SerialPort.FLOWCONTROL_NONE,
            SerialPort.FLOWCONTROL_RTSCTS_IN | SerialPort.FLOWCONTROL_RTSCTS_OUT,
            SerialPort.FLOWCONTROL_XONXOFF_IN | SerialPort.FLOWCONTROL_XONXOFF_OUT
        }));
        flowControlComboBox.setRenderer(new BasicComboBoxRenderer() {
            @Override
            public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) {
                final JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                final int v = (int) value;

                if (v == SerialPort.FLOWCONTROL_NONE) {
                    label.setText("None");
                } else if (v == (SerialPort.FLOWCONTROL_RTSCTS_IN | SerialPort.FLOWCONTROL_RTSCTS_OUT)) {
                    label.setText("RTS/CTS");
                } else if (v == (SerialPort.FLOWCONTROL_XONXOFF_IN | SerialPort.FLOWCONTROL_XONXOFF_OUT)) {
                    label.setText("XON/XOFF");
                }

                return label;
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${flowControl}"), flowControlComboBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"), "flowControlBinding");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, serialPortComboBox, org.jdesktop.beansbinding.ELProperty.create("${selectedItem != null}"), flowControlComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout serialPortConfigurationPanelLayout = new javax.swing.GroupLayout(serialPortConfigurationPanel);
        serialPortConfigurationPanel.setLayout(serialPortConfigurationPanelLayout);
        serialPortConfigurationPanelLayout.setHorizontalGroup(
            serialPortConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serialPortConfigurationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serialPortConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(serialPortConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(baudRateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataBitsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopBitsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flowControlComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        serialPortConfigurationPanelLayout.setVerticalGroup(
            serialPortConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serialPortConfigurationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serialPortConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(baudRateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(serialPortConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataBitsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(serialPortConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopBitsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(serialPortConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(parityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(serialPortConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flowControlComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serialPortConfigurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(serialPortSelectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(serialPortSelectionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serialPortConfigurationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
